#!/bin/bash
#Author: Rongchuan Sun
#StudentNumber: 23715251

#to get Month column 
Month=$(cut -f6 $1 | tail -n +2)

#count the number of occurrences per month
month_counts=$(echo "$Month" | sort -n | uniq -c | awk '{print $1}')

#calculate the median based on month_counts
median=$(echo "$month_counts" | sort -n | awk '{
	count[NR] = $1
} END {
	#determine whether the number of data points is odd or even
	if (NR % 2 == 1) {
		print count[(NR + 1) / 2]
	} else {
		print (count[NR / 2] + count[(NR / 2) + 1]) / 2
	}
}')

#calculate MAD based on month_counts
MAD=$(echo "$month_counts" | sort -n | gawk -v median=$median '{
	diffs[NR] = $1 - median
	
} END {
	n = NR
	
	#determine whether the number of data points is odd or even
	if (n % 2 == 1) {
		#the number of data is odd
		mid = (n + 1) / 2

		#take the absolute value of the difference -
		#between the mdeian and each date point 
		for (i = 1; i <= n; i++) {
			abs_diffs[i] = (diffs[i] < 0) ? -diffs[i] : diffs[i]
		}

		#sort the absolute value
		asort(abs_diffs)

		#get mad
		mad=abs_diffs[mid]
		print mad
	} else {
		#the number of data is even
		mid1 = n / 2
		mid2 = mid1 + 1

		#take the absolute value of the difference -
		#between the mdeian and each date point 
		for (i = 1; i <= n; i++) {
			abs_diffs[i] = (diffs[i] < 0) ? -diffs[i] : diffs[i]
		}

		#sort the absolute value
		asort(abs_diffs)

		#get mad
		mad = (abs_diffs[mid1] + abs_diffs[mid2]) / 2
		print mad
	}
}')

#calculate the sum and difference of the median and MAD
sum=$(awk -v median=$(printf "%.10f" "$median") -v MAD=$(printf "%.10f" "$MAD") 'BEGIN {sum = median + MAD; print sum}')
diff=$(awk -v median=$(printf "%.10f" "$median") -v MAD=$(printf "%.10f" "$MAD") 'BEGIN {diff = median - MAD; print diff}')

echo "median: $median"
echo "MAD: $MAD"
echo "sum: $sum"
echo -e "diff: $diff\n"

#determine the size between count of per month and sum and difference above
while read -r line
do
	#count the number of per month and get months of occurrence
	count=$(echo "$line" | awk '{print $1}')
	monthNum=$(echo "$line" | awk '{print $2}')
	
	#convert the month from a number to an abbreviation
	month=$(echo "$monthNum" | awk 'BEGIN {
		split("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec", month_names, " ")
}
{
	month_num = $1
	print month_names[month_num]
}')
	#count is more than sum, and output the result
    if awk -v count="$count" -v sum="$sum" -v diff="$diff" \
        'BEGIN {if (count >= sum) exit 1; else if (count <= diff) exit 2; else exit 0}'
    then
        echo -e "$month\t$count\t"
	#count is less than diff, and output the result
    elif [ $? -eq 2 ]
    then
        echo -e "$month\t$count\t--"

	#count is between sum and diff
    elif [ $? -eq 1 ]
    then
        echo -e "$month\t$count\t++"
    fi
done < <(echo "$Month" | sort -n | uniq -c)
	
